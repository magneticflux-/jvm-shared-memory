#
# CI build that assembles artifacts and runs tests.
# If validation is successful this workflow releases from the main dev branch.
#
# - skipping CI: add [skip ci] to the commit message
# - skipping release: add [skip release] to the commit message
#
name: CI

on:
  push:
    branches: [ 'master' ]
    tags-ignore: [ v* ] # release tags are autogenerated after a successful CI, no need to run CI against them
  pull_request:
    branches: [ '**' ]

jobs:

  assemble:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '16'
      - uses: burrunan/gradle-cache-action@v1
        with:
          gradle-distribution-sha-256-sum-warning: false
      - name: Assemble
        run: ./gradlew assemble
  test:
    needs: assemble
    name: Test on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-latest ]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '16'
      - uses: burrunan/gradle-cache-action@v1
        with:
          gradle-distribution-sha-256-sum-warning: false
      - name: Test
        run: ./gradlew test

  publish:
    needs: [ test ]
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
      && github.ref == 'refs/heads/master'
      && github.repository == 'magneticflux-/jvm-shared-memory'
      && !(contains(toJSON(github.event.commits.*.message), '[skip release]') || contains(toJSON(github.event.commits.*.message), '[skip ci]'))

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: '0' # https://github.com/shipkit/shipkit-changelog#fetch-depth-on-ci

      - uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '16'

      - uses: burrunan/gradle-cache-action@v1
        with:
          gradle-distribution-sha-256-sum-warning: false

      - name: Perform release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          MAVEN_TOKEN: ${{ secrets.MAVEN_TOKEN }}
        run: ./gradlew githubRelease publish
